<?php

/**
* Implements hook_entity_property_info_alter().
*/
function eige_tokens_entity_property_info_alter(&$info) {
  // Provided token: [node:english-node-title]
  $info['node']['properties']['english-node-title'] = array(
    'label' => t('English node title'),
    'type' => 'text',
    'description' => t('The title of the latest published revision of the source English node.'),
    'computed' => TRUE,
    'field' => FALSE,
  );
}

function eige_tokens_token_info() {
  $info['tokens']['term']['css-class'] = array(
    'name' => t('Term css class'),
    'description' => t('A css class generated by the sanitized term name value.'),
  );
  return $info;
}

/**
* Implements hook_tokens().
*/
function eige_tokens_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if ($type == 'entity' && $data['entity_type'] == 'node') {
    foreach ($tokens as $token => $full_token) {
      switch ($token) {
        case 'english-node-title':
          $node = $data['entity'];
          $replacements[$full_token] = $node->title;
          break;
      }
    }
  }
  if ($type == 'term' && !empty($data['term'])) {
    $term = $data['term'];
    foreach ($tokens as $token => $full_token) {
      switch ($token) {
        case 'css-class':
          $replacements[$full_token] = _title_to_css_class($term->name);
          break;
      }
    }
  }
  return $replacements;
}

?>
